@page "/curl"
@using MediaTypeHeaderValue = System.Net.Http.Headers.MediaTypeHeaderValue
@inject HttpClient HttpClient

<PageTitle>Curl Conversion</PageTitle>

<h1>Curl Conversion Tools</h1>

@*
<p role="status"> @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
*@


<div class="input-group mb-3">
    <button class="btn btn-outline-secondary dropdown-toggle btn-lg px-5" type="button" data-bs-toggle="dropdown" aria-expanded="false">@SwapMode</button>
    <ul class="dropdown-menu">

        <li>
            <div class="dropdown-item" @onclick="SetToRust">Rust</div>
        </li>
        <li>
            <div class="dropdown-item" @onclick="SetToJava">Java</div>
        </li>
        <li>
            <div class="dropdown-item" @onclick="SetToPython">Python</div>
        </li>
    </ul>
    <textarea class="form-control" aria-label="With textarea"></textarea>
    <button class="btn btn-primary" @onclick="MakeHttpRequest">Convert</button>
</div>

<div class="border border-primary rounded" style="width:100%">

    <code>@_responseMessage</code>

</div>


@*<div class="btn-group">
    <button type="button" class="btn btn-secondary">Reference</button>
    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference" data-bs-toggle="dropdown" aria-expanded="false" data-bs-reference="parent">
        <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuReference">
        <li>
            <a class="dropdown-item" href="#">Action</a>
        </li>
        <li>
            <a class="dropdown-item" href="#">Another action</a>
        </li>
        <li>
            <a class="dropdown-item" href="#">Something else here</a>
        </li>
        <li>
            <hr class="dropdown-divider">
        </li>
        <li>
            <a class="dropdown-item" href="#">Separated link</a>
        </li>
    </ul>
</div>*@

@code {
    private string? _responseMessage;
    private string SwapMode { get; set; } = "Rust";

    private void SetToRust()
    {
        SwapMode = "Rust";
    }

    private void SetToJava()
    {
        SwapMode = "Java";
    }

    private void SetToPython()
    {
        SwapMode = "Python";
    }


    private async Task MakeHttpRequest()
    {
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Post, "https://curlconv.netlify.app/convert");
            // TODO: pull this data from req.
            request.Content = new StringContent("{\n          \"language\": \"Java\",\n          \"command\": \"curl -X POST https://google.com/\"\n        }");
            request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

            var response = await HttpClient.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                var data = await response.Content.ReadAsStringAsync();
                string [] dataArr = data.Split('[');
                _responseMessage = dataArr[1];
                //Console.WriteLine("Received Data : "+dataArray.split("\"")[1]);
            }
            else
            {
                _responseMessage = "Error: " + response.ReasonPhrase;
            }
        }
        catch (Exception ex)
        {
            _responseMessage = "Error: " + ex.Message;
        }
    }


}